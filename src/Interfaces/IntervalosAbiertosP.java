/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import static Eval.Eval.Derivar;
import static Eval.Eval.Eval;
import static Eval.Eval.isParser;
import Graficador.GraficadorClasico;
import Reporte.IntervalosAbiertosDS;
import Reporte.IntervalosAbiertosSetGet;
import com.keffect.effects.animatedEffects.ZoomIn;
import com.keffectpanel.KEffectPanel;
import java.awt.Graphics2D;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Reymundo Tenorio
 */
public class IntervalosAbiertosP extends javax.swing.JFrame {

    /**
     * Creates new form IntervalosAbiertosP
     */
    public IntervalosAbiertosP() {

        try {
            this.setIconImage(new ImageIcon(getClass().getResource("Icono.png")).getImage());
        } catch (NullPointerException ex) {
        }

        initComponents();
        Variable.setTransferHandler(null);
        ValorInicio.setTransferHandler(null);
        ValorVerdadero.setTransferHandler(null);
        Ea.setTransferHandler(null);

        // this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btncancel = new javax.swing.JButton();
        Panel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Variable = new javax.swing.JTextField();
        ValorVerdadero = new javax.swing.JTextField();
        ValorInicio = new javax.swing.JTextField();
        Ea = new javax.swing.JTextField();
        Funcion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cmbMetodo = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnCalcular = new javax.swing.JButton();
        btnGraficar = new javax.swing.JButton();
        btnReporte = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        btncancel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btncancel.setForeground(new java.awt.Color(255, 255, 255));
        btncancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Cancelar.png"))); // NOI18N
        btncancel.setMnemonic('c');
        btncancel.setText("Cancelar");
        btncancel.setToolTipText("Cancelar / Salir");
        btncancel.setContentAreaFilled(false);
        btncancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btncancel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btncancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Intervalos Abiertos");
        setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Panel = PanelEffect;
        Panel.setBackground(new java.awt.Color(0, 142, 99));
        Panel.setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Resultados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.BorderLayout());

        Tabla.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        Tabla.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(Tabla);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        Panel.add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Variable");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Valor Verdadero");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Valor Inicio");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Función");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Ea(%)");

        Variable.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Variable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                VariableKeyTyped(evt);
            }
        });

        ValorVerdadero.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        ValorVerdadero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ValorVerdaderoKeyTyped(evt);
            }
        });

        ValorInicio.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        ValorInicio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ValorInicioKeyTyped(evt);
            }
        });

        Ea.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Ea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                EaKeyTyped(evt);
            }
        });

        Funcion.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Funcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FuncionKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Método");

        cmbMetodo.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cmbMetodo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Seleccione>", "Newton Raphson" }));
        cmbMetodo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cmbMetodoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel6))
                            .addGap(25, 25, 25))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(94, 94, 94)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(99, 99, 99)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Variable)
                            .addComponent(cmbMetodo, 0, 206, Short.MAX_VALUE)
                            .addComponent(ValorVerdadero, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ValorInicio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Ea, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(Funcion, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel4)
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Funcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(Variable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ValorInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(ValorVerdadero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cmbMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(Ea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        Panel.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanel3.setBackground(new java.awt.Color(0, 73, 60));

        btnNuevo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnNuevo.setForeground(new java.awt.Color(255, 255, 255));
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Nuevo.png"))); // NOI18N
        btnNuevo.setMnemonic('n');
        btnNuevo.setText("Nuevo");
        btnNuevo.setToolTipText("Calcular los valores");
        btnNuevo.setContentAreaFilled(false);
        btnNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jPanel3.add(btnNuevo);

        btnCalcular.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnCalcular.setForeground(new java.awt.Color(255, 255, 255));
        btnCalcular.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Calculadora.png"))); // NOI18N
        btnCalcular.setMnemonic('a');
        btnCalcular.setText("Calcular");
        btnCalcular.setToolTipText("Calcular los valores");
        btnCalcular.setContentAreaFilled(false);
        btnCalcular.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCalcular.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });
        jPanel3.add(btnCalcular);

        btnGraficar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnGraficar.setForeground(new java.awt.Color(255, 255, 255));
        btnGraficar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Graficar.png"))); // NOI18N
        btnGraficar.setMnemonic('g');
        btnGraficar.setText("Gráficar");
        btnGraficar.setToolTipText("Gráficar la función");
        btnGraficar.setContentAreaFilled(false);
        btnGraficar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGraficar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGraficar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGraficarActionPerformed(evt);
            }
        });
        jPanel3.add(btnGraficar);

        btnReporte.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnReporte.setForeground(new java.awt.Color(255, 255, 255));
        btnReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Imprimir.png"))); // NOI18N
        btnReporte.setMnemonic('r');
        btnReporte.setText("Reporte");
        btnReporte.setToolTipText("Reporte de Intervalo Abierto");
        btnReporte.setContentAreaFilled(false);
        btnReporte.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReporte.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteActionPerformed(evt);
            }
        });
        jPanel3.add(btnReporte);

        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Cancelar.png"))); // NOI18N
        btnCancelar.setMnemonic('c');
        btnCancelar.setText("Cancelar");
        btnCancelar.setToolTipText("Cancelar / Salir");
        btnCancelar.setContentAreaFilled(false);
        btnCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel3.add(btnCancelar);

        Panel.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(Panel, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(867, 597));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    KEffectPanel PanelEffect = new KEffectPanel();


    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        PanelEffect.setEffect(new ZoomIn(1500));

        String[] Header = {"Iteración", "Xi", "Et(%)", "Ea(%)"};

        Model.setColumnIdentifiers(Header);
        this.Tabla.setModel(Model);

        Funcion.requestFocus();

        PanelEffect.startEffect();

// TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void btncancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelActionPerformed
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btncancelActionPerformed

    IntervalosAbiertosDS DataSource = new IntervalosAbiertosDS();

    public void Reporte(ProcesandoInfo P) throws FileNotFoundException {
        Map Parametros = new HashMap();
        Parametros.clear();
        File F = new File("");
        String RutaImagen = F.getAbsolutePath() + "/src/Grafica/GraficaAbierta.jpg";
//       System.out.println("Ruta Reporte: "+this.getClass().getResource(RutaImagen));

        InputStream Imagen = new FileInputStream(RutaImagen);
        Parametros.put("Grafica", Imagen);
        Parametros.put("Funcion", Funcion.getText().trim());
        Parametros.put("Variable", Variable.getText().trim());
        Parametros.put("ValorInicial", ValorInicio.getText().trim());
        Parametros.put("ValorVerdadero", ValorVerdadero.getText().trim());
        Parametros.put("EaT", Ea.getText().trim());
        Parametros.put("Metodo", (String) cmbMetodo.getSelectedItem());

        for (int i = 0; i < Tabla.getRowCount(); i++) {

            String Iteracion = (String) this.Tabla.getValueAt(i, 0).toString();
            String Xi = (String) this.Tabla.getValueAt(i, 1).toString();
            String Et = (String) this.Tabla.getValueAt(i, 2).toString();
            String EaF = (String) this.Tabla.getValueAt(i, 3).toString();

            IntervalosAbiertosSetGet IA = new IntervalosAbiertosSetGet(Iteracion, Xi, Et, EaF);

            DataSource.addIntervaloAbierto(IA);

        }

        String Reporte = F.getAbsolutePath() + "/src/Reporte/IntervalosAbiertosReport.jasper";

        JasperPrint jp = null;

        try {
            jp = JasperFillManager.fillReport(Reporte, Parametros, DataSource);
        } catch (JRException ex) {

//                Logger.getLogger(ProveedorP.class.getName()).log(Level.SEVERE, null, ex);
        }

        JasperViewer view = new JasperViewer(jp, false);
        view.setTitle("Intervalos Abiertos");

        view.setZoomRatio((float) 0.60);
        view.setVisible(true);

        view.setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
        view.toFront();
        P.dispose();

    }


    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();  // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelarActionPerformed

    public void TextoDecimales(JTextField TextField, KeyEvent evt) {

        char a = evt.getKeyChar();

        if (a == '-' && TextField.getCaretPosition() != 0) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            return;
        }

        if (!Character.isDigit(a) && !Character.isISOControl(a) && a != '.' && a != '-') {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            return;
        }

        if ("0".equals(TextField.getText()) && TextField.getCaretPosition() == 1 && a != '.' && !Character.isISOControl(a)) {
            TextField.setText(TextField.getText() + ".");
//        return;
        }

        if (a == '.' && TextField.getText().contains(".")) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            return;
        }

        String x1 = "";
        if (Character.isDigit(a) || (Character.isISOControl(a) && !"".equals(TextField.getText()))) {
            x1 = TextField.getText();
        }
        if (Character.isDigit(a) || (a == '.')) {
            x1 = TextField.getText().concat(String.valueOf(a));
        }

        if (!"".equals(x1)) {

            try {

                Double x = Double.parseDouble(x1);

                if (x > Double.MAX_VALUE) {
                    Toolkit.getDefaultToolkit().beep();
                    evt.consume();
                }

            } catch (NumberFormatException ex) {
                Toolkit.getDefaultToolkit().beep();
                evt.consume();
            }
        }

    }

    public void ScreenShotPanel(JPanel panel) throws IOException {

        int w = panel.getWidth();
        int h = panel.getHeight();
        BufferedImage bi = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
        Graphics2D g = bi.createGraphics();
        panel.print(g);

        File F = new File("");
        String Imagen = "/src/Grafica/GraficaAbierta.jpg";
        File Carpeta = new File(F.getAbsoluteFile() + "/src/Grafica");
        Carpeta.mkdirs();
        String Ruta = F.getAbsolutePath() + Imagen;
//        System.out.println("Ruta " + Ruta);
        File RutaF = new File(Ruta);
        ImageIO.write(bi, "JPEG", RutaF);

    }

    private void btnGraficarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGraficarActionPerformed

        if (Validar()) {

            String FuncionF = Funcion.getText().trim();
            String VariableF = Variable.getText().trim();

            GraficadorClasico g = new GraficadorClasico(VariableF);
            g.setVisible(true);
            g.AgregarFuncion(FuncionF);
            try {
                ScreenShotPanel(g.PanelGrafica());
                // TODO add your handling code here:
            } catch (IOException ex) {
                // Logger.getLogger(IntervalosAbiertosP.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btnGraficarActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed

        if (Validar()) {
            Calcular();
        }      // TODO add your handling code here:
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void ValorInicioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ValorInicioKeyTyped

        char a = evt.getKeyChar();

        if (a == KeyEvent.VK_ENTER) {

            ValorVerdadero.requestFocus();
        }

        TextoDecimales(ValorInicio, evt);        // TODO add your handling code here:
    }//GEN-LAST:event_ValorInicioKeyTyped

    private void EaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EaKeyTyped

        char a = evt.getKeyChar();

        if (a == KeyEvent.VK_ENTER) {

            cmbMetodo.requestFocus();
        }

        TextoDecimales(Ea, evt);         // TODO add your handling code here:
    }//GEN-LAST:event_EaKeyTyped

    private void ValorVerdaderoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ValorVerdaderoKeyTyped

        char a = evt.getKeyChar();

        if (a == KeyEvent.VK_ENTER) {

            Ea.requestFocus();
        }

        TextoDecimales(ValorVerdadero, evt);         // TODO add your handling code here:
    }//GEN-LAST:event_ValorVerdaderoKeyTyped

    public void TextoVariable(JTextField TextField, KeyEvent evt) {

        char a = evt.getKeyChar();

        if (Character.isDigit(a)) {

            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }

    }


    private void VariableKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_VariableKeyTyped

        char a = evt.getKeyChar();

        if (a == KeyEvent.VK_ENTER) {

            ValorInicio.requestFocus();
        }

        TextoVariable(Variable, evt);
// TODO add your handling code here:
    }//GEN-LAST:event_VariableKeyTyped

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed

        Nuevo();
        Habilitar();
    }//GEN-LAST:event_btnNuevoActionPerformed

    class Procesar extends Thread {

        ProcesandoInfo p;

        public Procesar(ProcesandoInfo P) {
            this.p = P;
        }

        @Override
        public void run() {

            Calcular();

            String FuncionF = Funcion.getText().trim();
            String VariableF = Variable.getText().trim();

            GraficadorClasico g = new GraficadorClasico(VariableF);
            g.setVisible(true);
            g.toBack();
            g.AgregarFuncion(FuncionF);
            try {
                ScreenShotPanel(g.PanelGrafica());
                // TODO add your handling code here:
            } catch (IOException ex) {
                // Logger.getLogger(IntervalosAbiertosP.class.getName()).log(Level.SEVERE, null, ex);
            }

            g.dispose();

            try {
                Reporte(this.p);        // TODO add your handling code here:
            } catch (FileNotFoundException ex) {
                //  Logger.getLogger(IntervalosAbiertosP.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }


    private void btnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteActionPerformed

        if (Validar()) {

            ProcesandoInfo p = new ProcesandoInfo();
            p.setVisible(true);

            p.toFront();
            new Procesar(p).start();

        }
    }//GEN-LAST:event_btnReporteActionPerformed

    private void FuncionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FuncionKeyTyped

        char a = evt.getKeyChar();

        if (a == KeyEvent.VK_ENTER) {

            Variable.requestFocus();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_FuncionKeyTyped

    private void cmbMetodoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbMetodoKeyTyped
        char a = evt.getKeyChar();

        if (a == KeyEvent.VK_ENTER) {

            if (Validar()) {
                Calcular();
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMetodoKeyTyped

    public void Habilitar() {
        Funcion.setEnabled(true);
        Variable.setEnabled(true);
        ValorInicio.setEnabled(true);
        ValorVerdadero.setEnabled(true);
        Ea.setEnabled(true);
        cmbMetodo.setEnabled(true);
    }

    public void Deshabilitar() {
        Funcion.setEnabled(false);
        Variable.setEnabled(false);
        ValorInicio.setEnabled(false);
        ValorVerdadero.setEnabled(false);
        Ea.setEnabled(false);
        cmbMetodo.setEnabled(false);
    }

    public boolean Validar() {
        String Fun, Var, VI, VV, EaF, Metodo;

        Fun = Funcion.getText().trim();
        Var = Variable.getText().trim();
        VI = ValorInicio.getText().trim();
        VV = ValorVerdadero.getText().trim();
        EaF = Ea.getText().trim();
        Metodo = (String) cmbMetodo.getSelectedItem();

        if ("".equals(Fun) || "".equals(Var) || "".equals(VI) /*|| "".equals(VV)*/ || "".equals(EaF) || "<Seleccione>".equals(Metodo)) {

            JOptionPane.showMessageDialog(this, "Complete todos los datos", "Complete", JOptionPane.ERROR_MESSAGE);
            return false;

        }

        return true;
    }

    public void Calcular() {

        double valorverdadero = Double.NaN, ea, valorinicio;
        String funcion, derivada, variable;

        if (!ValorVerdadero.getText().trim().equals("")) {
            try {
                valorverdadero = Double.parseDouble(ValorVerdadero.getText());
            } catch (NumberFormatException nf) {
                String Msj = "Error de caracteres en los límites o en el valor Ea de referencia";
                Error Er = new Error(this, true, Msj);
                Er.setVisible(true);
                Er.toFront();
                return;
            }
        }

        try {
            ea = Double.parseDouble(Ea.getText());
            valorinicio = Double.parseDouble(ValorInicio.getText());

        } catch (NumberFormatException nf) {
            String Msj = "Error de caracteres en los límites o en el valor Ea de referencia";
            Error Er = new Error(this, true, Msj);
            Er.setVisible(true);
            Er.toFront();
            return;
        }

        Limpiar();
        variable = Variable.getText().trim();
        funcion = Funcion.getText();

        if (isParser(funcion, variable, valorinicio)) {
            //  JOptionPane.showMessageDialog(null, "Error no se puede evaluar la funcion", "Error", JOptionPane.ERROR_MESSAGE);
            String Msj = "Error, no se puede evaluar la función";
            Error Er = new Error(this, true, Msj);
            Er.setVisible(true);
            Er.toFront();
            return;
        }

        derivada = Derivar(funcion, variable);

        System.out.println("Derivada de la funcion : " + derivada);
        double xr = valorinicio;
        double xrAnt;
        int iteracion = 0;
        do {
            iteracion++;
            xrAnt = xr;
            xr = xr - (Eval(funcion, variable, xr) / Eval(derivada, variable, xr));
            Model.addRow(new Object[]{iteracion, xr, CalculoDiferencia(valorverdadero, xr), CalculoDiferencia(xr, xrAnt)});
        } while (CalculoDiferencia(xr, xrAnt) > ea);

        this.Tabla.setModel(Model);

      //  Deshabilitar();
    }

    public void Nuevo() {
        Model.setRowCount(0);
        Tabla.setModel(Model);

        Funcion.setText("");
        Variable.setText("");
        ValorInicio.setText("");
        ValorVerdadero.setText("");
        Ea.setText("");
        cmbMetodo.setSelectedIndex(0);

        Funcion.requestFocus();
    }

    public void Limpiar() {
        for (int i = Model.getRowCount() - 1; i >= 0; i--) {
            Model.removeRow(i);
        }
        Tabla.setModel(Model);
    }

    public double CalculoDiferencia(double va, double vant) {
        return Math.abs(((va - vant)) / va * 100);
    }

    DefaultTableModel Model = new DefaultTableModel() {

//        
//    Class[] types = new Class [] {
//  
//        java.lang.Boolean.class,java.lang.String.class, java.lang.String.class, 
//        java.lang.String.class, java.lang.String.class, java.lang.String.class, 
//        java.lang.String.class
//    };
// 
//
//    @Override
//    public Class getColumnClass(int columnIndex) {
//        return types [columnIndex];
//    }
        @Override
        public boolean isCellEditable(int row, int column) {

//     if(column == 0){
//            return true;
//        }else{
//            return false;
//    }
//all cells false
            return false;

        }
    };

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(IntervalosAbiertosP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        
        try {

            UIManager.setLookAndFeel(new com.nilo.plaf.nimrod.NimRODLookAndFeel());

        } catch (UnsupportedLookAndFeelException e) {
            //System.out.println("NO SE PUEDE CARGAR");      
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new IntervalosAbiertosP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Ea;
    private javax.swing.JTextField Funcion;
    private javax.swing.JPanel Panel;
    private javax.swing.JTable Tabla;
    private javax.swing.JTextField ValorInicio;
    private javax.swing.JTextField ValorVerdadero;
    private javax.swing.JTextField Variable;
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGraficar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnReporte;
    private javax.swing.JButton btncancel;
    private javax.swing.JComboBox cmbMetodo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
